services:  
  rest:
    image: docker.io/postgrest/postgrest:v12.2.3
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      PGRST_DB_URI: postgres://authenticator:authenticator@db:5432/postgres
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS}
      PGRST_DB_ANON_ROLE: anon
      PGRST_DB_MAX_ROWS: ${PGRST_DB_MAX_ROWS}
      PGRST_JWT_SECRET: ${ACCESS_TOKEN_SECRET}
      PGRST_JWT_AUD: ${AUDIENCE}
    container_name: rest
    networks:
      - stexs
    depends_on:
      - db


  db:
    image: docker.io/postgres:17.2
    ports: 
      - 5432:5432
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    container_name: db
    networks:
      - stexs


  mailpit:
    image: docker.io/axllent/mailpit:v1.21.8
    ports:
      - 1025:1025
      - 8025:8025
    restart: unless-stopped
    container_name: mailpit


  swagger:
    image: docker.io/swaggerapi/swagger-ui:v5.18.2
    ports:
      - 80:8080
    restart: unless-stopped
    container_name: swagger
    environment:
      SWAGGER_JSON_URL: http://localhost:8000/rest/v1
    networks:
      - stexs


  minio:
    image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
    ports: 
      - 9000:9000
      - 9001:9001
    restart: unless-stopped
    volumes:
      - minio-data:/data
    container_name: minio
    command: server --console-address ":9001" /data
    networks:
      - stexs


  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    container_name: dragonfly
    ports:
      - 6379:6379
    ulimits:
      memlock: -1
    deploy:
      resources:
        limits:
          cpus: 1
    volumes:
      - dragonfly-data:/data
    restart: unless-stopped
    networks:
      - stexs


  kong-db:
    image: docker.io/postgres:17.2
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    container_name: kong-db
    restart: unless-stopped
    volumes:
      - kong-data:/var/lib/postgresql/data
    networks:
      - stexs


  kong-migrations: 
    image: docker.io/kong/kong-gateway:3.4
    environment:
      KONG_DATABASE: postgres
      POSTGRES_USER: kong
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kongpass
      KONG_PASSWORD: test
    command: ["kong", "migrations", "bootstrap"]
    container_name: kong-migrations
    networks:
      - stexs
    depends_on:
      - kong-db


  kong:
    image: docker.io/kong/kong-gateway:3.4
    environment:
      KONG_DATABASE: postgres
      POSTGRES_USER: kong
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
      - 8002:8002
      - 8445:8445
      - 8003:8003
      - 8004:8004
    container_name: kong
    depends_on:
      - kong-db
    restart: unless-stopped
    networks:
      - stexs
    extra_hosts:
      - "host.docker.internal:host-gateway"

  
networks:
  stexs:
    driver: bridge

volumes:
  db-data:
  kong-data:
  minio-data:
  dragonfly-data:
      