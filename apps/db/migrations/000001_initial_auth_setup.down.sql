DROP TABLE IF EXISTS public.oauth2_connection_scopes CASCADE;
DROP TABLE IF EXISTS auth.refresh_tokens CASCADE;
DROP FUNCTION IF EXISTS auth.delete_connection() CASCADE;
DROP FUNCTION IF EXISTS public.generate_new_client_secret(app_id INT) CASCADE;
DROP FUNCTION IF EXISTS utils.has_client_scope(_scope_id INT) CASCADE;
DROP TABLE IF EXISTS public.oauth2_connections CASCADE;
DROP TABLE IF EXISTS auth.oauth2_authorization_token_scopes CASCADE;
DROP TABLE IF EXISTS auth.oauth2_authorization_tokens CASCADE;
DROP TABLE IF EXISTS public.oauth2_app_scopes CASCADE;
DROP TABLE IF EXISTS public.scopes CASCADE;
DROP FUNCTION IF EXISTS public.generate_client_credentials() CASCADE;
DROP VIEW IF EXISTS public.oauth2_apps_public CASCADE;
DROP TABLE IF EXISTS public.oauth2_apps CASCADE;
DROP TABLE IF EXISTS public.projects CASCADE;
DROP TABLE IF EXISTS public.organizations CASCADE;
DROP FUNCTION IF EXISTS auth.create_profile_for_user() CASCADE;
DROP TABLE IF EXISTS public.profiles CASCADE;
DROP FUNCTION IF EXISTS utils.is_url_valid(url TEXT, strict BOOLEAN) CASCADE;
DROP TABLE IF EXISTS auth.mfa CASCADE;
DROP FUNCTION IF EXISTS auth.encrypt_password() CASCADE;
DROP FUNCTION IF EXISTS auth.check_username_and_email() CASCADE;
DROP FUNCTION IF EXISTS auth.delete_unverified_users() CASCADE;
DROP FUNCTION IF EXISTS auth.create_mfa_for_user() CASCADE;
DROP TABLE IF EXISTS auth.users CASCADE;
DROP SCHEMA IF EXISTS utils CASCADE;
DROP SCHEMA IF EXISTS auth CASCADE;
DROP EXTENSION IF EXISTS "uuid-ossp" CASCADE;
DROP EXTENSION IF EXISTS pgcrypto CASCADE;
DROP EXTENSION IF EXISTS citext CASCADE;
DROP SCHEMA IF EXISTS extensions CASCADE;
DROP OWNED BY authenticated CASCADE;
DROP OWNED BY anon CASCADE;
DROP OWNED BY authenticator CASCADE;
DROP ROLE IF EXISTS authenticated;
DROP ROLE IF EXISTS anon;
DROP ROLE IF EXISTS authenticator;
ALTER DATABASE postgres RESET search_path;
