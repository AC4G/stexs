REVOKE INSERT, UPDATE, DELETE, SELECT ON TABLE public.items FROM authenticated, anon;
REVOKE INSERT, UPDATE, DELETE, SELECT ON TABLE public.inventories FROM authenticated, anon;
REVOKE EXECUTE ON FUNCTION public.check_inventory_update() FROM public;
REVOKE EXECUTE ON FUNCTION public.check_inventory_delete() FROM public;
REVOKE EXECUTE ON FUNCTION public.check_inventory_insert() FROM public;
REVOKE INSERT, DELETE, SELECT ON TABLE public.friends FROM authenticated, anon;
REVOKE EXECUTE ON FUNCTION public.friend_insert() FROM public;
REVOKE EXECUTE ON FUNCTION public.check_friends_limit() FROM public;
REVOKE EXECUTE ON FUNCTION public.friend_delete() FROM public;
REVOKE INSERT, DELETE, SELECT ON TABLE public.friend_requests FROM authenticated, anon;
REVOKE EXECUTE ON FUNCTION public.insert_friend_request_into_notifications() FROM public;
REVOKE EXECUTE ON FUNCTION public.check_friend_request_limit() FROM public;
REVOKE EXECUTE ON FUNCTION public.check_accept_friend_requests_before_insert() FROM public;
REVOKE INSERT, DELETE, SELECT ON TABLE public.blocked FROM authenticated, anon;
REVOKE EXECUTE ON FUNCTION public.delete_friend_request_or_friend_if_exists() FROM public;
REVOKE INSERT, UPDATE, DELETE, SELECT ON TABLE public.organization_members FROM authenticated, anon;
REVOKE EXECUTE ON FUNCTION public.delete_organization_request() FROM public;
REVOKE INSERT, UPDATE, DELETE, SELECT ON TABLE public.organization_requests FROM authenticated, anon;
REVOKE EXECUTE ON FUNCTION public.insert_organization_request_into_notifications() FROM public;
REVOKE EXECUTE ON FUNCTION public.check_organization_request_limit() FROM public;
REVOKE EXECUTE ON FUNCTION public.make_organization_creator_as_owner() FROM public;
REVOKE INSERT, UPDATE, DELETE, SELECT ON TABLE public.project_members FROM authenticated, anon;
REVOKE EXECUTE ON FUNCTION public.delete_project_request() FROM public;
REVOKE INSERT, UPDATE, DELETE, SELECT ON TABLE public.project_requests FROM authenticated, anon;
REVOKE EXECUTE ON FUNCTION public.insert_project_request_into_notifications() FROM public;
REVOKE EXECUTE ON FUNCTION public.check_project_request_limit() FROM public;
REVOKE EXECUTE ON FUNCTION public.make_project_creator_a_member() FROM public;
REVOKE INSERT, UPDATE, DELETE, SELECT ON TABLE public.notifications FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.blocked_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.friends_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.friend_requests_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.inventories_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.items_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.oauth2_app_scopes_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.oauth2_apps_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.organization_members_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.organizations_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.organization_requests_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.project_members_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.projects_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.project_requests_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.scopes_id_seq FROM authenticated;
REVOKE USAGE, SELECT ON SEQUENCE public.notifications_id_seq FROM authenticated;

DROP TRIGGER IF EXISTS check_inventory_update_trigger ON public.inventories;
DROP TRIGGER IF EXISTS check_inventory_delete_trigger ON public.inventories;
DROP TRIGGER IF EXISTS check_inventory_insert_trigger ON public.inventories;
DROP TRIGGER IF EXISTS friend_insert_trigger ON public.friends;
DROP TRIGGER IF EXISTS enforce_friends_limit_trigger ON public.friends;
DROP TRIGGER IF EXISTS friend_delete_trigger ON public.friends;
DROP TRIGGER IF EXISTS friend_request_changed_trigger ON public.friend_requests;
DROP TRIGGER IF EXISTS enforce_friend_request_limit_trigger ON public.friend_requests;
DROP TRIGGER IF EXISTS check_accept_friend_requests_before_insert_trigger ON public.friend_requests;
DROP TRIGGER IF EXISTS delete_friend_request_or_friend_if_exists_trigger ON public.blocked;
DROP TRIGGER IF EXISTS delete_organization_request_trigger ON public.organization_members;
DROP TRIGGER IF EXISTS organization_request_changed_trigger ON public.organization_requests;
DROP TRIGGER IF EXISTS enforce_organization_request_limit_trigger ON public.organization_requests;
DROP TRIGGER IF EXISTS make_organization_creator_as_owner_trigger ON public.organizations;
DROP TRIGGER IF EXISTS project_members_insert_trigger ON public.project_members;
DROP TRIGGER IF EXISTS project_request_changed_trigger ON public.project_requests;
DROP TRIGGER IF EXISTS enforce_project_request_limit_trigger ON public.project_requests;
DROP TRIGGER IF EXISTS make_project_creator_a_member_trigger ON public.projects;

DROP FUNCTION IF EXISTS public.distinct_projects_from_inventory(UUID);
DROP FUNCTION IF EXISTS public.check_inventory_update();
DROP FUNCTION IF EXISTS public.check_inventory_delete();
DROP FUNCTION IF EXISTS public.check_inventory_insert();
DROP FUNCTION IF EXISTS public.friend_insert();
DROP FUNCTION IF EXISTS public.check_friends_limit();
DROP FUNCTION IF EXISTS public.friend_delete();
DROP FUNCTION IF EXISTS public.insert_friend_request_into_notifications();
DROP FUNCTION IF EXISTS public.check_friend_request_limit();
DROP FUNCTION IF EXISTS public.check_accept_friend_requests_before_insert();
DROP FUNCTION IF EXISTS public.delete_friend_request_or_friend_if_exists();
DROP FUNCTION IF EXISTS public.delete_organization_request();
DROP FUNCTION IF EXISTS public.insert_organization_request_into_notifications();
DROP FUNCTION IF EXISTS public.check_organization_request_limit();
DROP FUNCTION IF EXISTS public.make_organization_creator_as_owner();
DROP FUNCTION IF EXISTS public.delete_project_request();
DROP FUNCTION IF EXISTS public.insert_project_request_into_notifications();
DROP FUNCTION IF EXISTS public.check_project_request_limit();
DROP FUNCTION IF EXISTS public.make_project_creator_a_member();

DROP TABLE IF EXISTS public.items CASCADE;
DROP TABLE IF EXISTS public.inventories CASCADE;
DROP TABLE IF EXISTS public.friends CASCADE;
DROP TABLE IF EXISTS public.friend_requests CASCADE;
DROP TABLE IF EXISTS public.blocked CASCADE;
DROP TABLE IF EXISTS public.organization_members CASCADE;
DROP TABLE IF EXISTS public.organization_requests CASCADE;
DROP TABLE IF EXISTS public.project_members CASCADE;
DROP TABLE IF EXISTS public.project_requests CASCADE;
DROP TABLE IF EXISTS public.notifications CASCADE;
